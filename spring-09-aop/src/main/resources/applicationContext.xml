<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--使用注解来注册对象-->
    <context:component-scan base-package="com.local"/>

    <!--开启aop注解支持-->
    <aop:aspectj-autoproxy />

    <!--动态代理的第一种方式：使用api接口-->
    <!--配置aop:需要导入aop的约束-->
    <!-- <aop:config>
         &lt;!&ndash;需要一个切入点 expression:表达式  execution(要执行的位置) &ndash;&gt;
         <aop:pointcut id="pointcut" expression="execution(* com.local.service.UserServiceImpl.*(..))"/>

         &lt;!&ndash;执行环绕增加！  相当于把beforeLog这个类切入到切入点那去&ndash;&gt;
         <aop:advisor advice-ref="beforeLog" pointcut-ref="pointcut"/>
         <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>
     </aop:config>-->

    <!--方式二：使用自定义类-->
    <!-- <aop:config>
         &lt;!&ndash;自定义切面，ref要引用的类&ndash;&gt;
         <aop:aspect ref="diyPointcut">
         &lt;!&ndash;切入点&ndash;&gt;
             <aop:pointcut id="pointcut" expression="execution(* com.local.service.UserServiceImpl.*(..))"/>
         &lt;!&ndash;通知&ndash;&gt;
             <aop:before method="before" pointcut-ref="pointcut"/>
             <aop:after method="after" pointcut-ref="pointcut"/>
         </aop:aspect>
     </aop:config>-->

</beans>
